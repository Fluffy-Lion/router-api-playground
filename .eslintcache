[{"/Users/codenation/Desktop/codeNation/react-router-example/src/index.js":"1","/Users/codenation/Desktop/codeNation/react-router-example/src/App.js":"2","/Users/codenation/Desktop/codeNation/react-router-example/src/components/Pokemon.js":"3","/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonSearch/PokemonSearch.js":"4","/Users/codenation/Desktop/codeNation/react-router-example/src/components/Loading/Loading.js":"5","/Users/codenation/Desktop/codeNation/react-router-example/src/components/ErrorDisplay/ErrorDisplay.js":"6","/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonDisplay/PokemonDisplay.js":"7","/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonList/PokemonList.js":"8","/Users/codenation/Desktop/codeNation/react-router-example/src/services/pokemon.js":"9"},{"size":180,"mtime":1610985116087,"results":"10","hashOfConfig":"11"},{"size":1509,"mtime":1611242148591,"results":"12","hashOfConfig":"11"},{"size":412,"mtime":1611678486287,"results":"13","hashOfConfig":"11"},{"size":2976,"mtime":1611926694512,"results":"14","hashOfConfig":"11"},{"size":187,"mtime":1611318210437,"results":"15","hashOfConfig":"11"},{"size":174,"mtime":1612040121316,"results":"16","hashOfConfig":"11"},{"size":466,"mtime":1611939621447,"results":"17","hashOfConfig":"11"},{"size":3284,"mtime":1611941949618,"results":"18","hashOfConfig":"11"},{"size":423,"mtime":1611870809274,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1qxen47",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/codenation/Desktop/codeNation/react-router-example/src/index.js",[],["42","43"],"/Users/codenation/Desktop/codeNation/react-router-example/src/App.js",[],"/Users/codenation/Desktop/codeNation/react-router-example/src/components/Pokemon.js",["44"],"import React, { useState } from 'react'\nimport PokemonSearch from './PokemonSearch/PokemonSearch'\n// import Loading from '../components/Loading/Loading'\nimport PokemonList from './PokemonList/PokemonList'\n\nconst Pokemon = () => {\n\nreturn (\n    <div>\n        <h1> pokemon main component file</h1>\n        <PokemonSearch />\n        {/* <Loading /> */}\n        <PokemonList />\n    </div>\n)\n}\n\nexport default Pokemon","/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonSearch/PokemonSearch.js",[],"/Users/codenation/Desktop/codeNation/react-router-example/src/components/Loading/Loading.js",[],"/Users/codenation/Desktop/codeNation/react-router-example/src/components/ErrorDisplay/ErrorDisplay.js",["45"],"/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonDisplay/PokemonDisplay.js",["46"],"import React from 'react'\nimport './PokemonDisplay.css'\n\nconst PokemonDisplay = ({ pokemon }) => {\n    console.log(pokemon)\n    return (\n    <div>\n\n            <div>\n                <h1>pokemon display component</h1>\n                    <p>{pokemon.name}</p>\n                    <p>{pokemon.id}</p>\n                    <p>{pokemon.type}</p>\n                    <img src={pokemon.img} />\n            </div> \n        \n    </div>\n    )\n\n}\n\nexport default PokemonDisplay","/Users/codenation/Desktop/codeNation/react-router-example/src/components/PokemonList/PokemonList.js",["47","48"],"import React, { useState, useEffect } from 'react'\nimport { getAllPokemon, getPokemon } from '../../services/pokemon'\nimport Loading from '../Loading/Loading'\nimport './PokemonList.css'\n\nconst PokemonList = () => {\n    const [pokemonData, setPokemonData] = useState([])\n    const [nextUrl, setNextUrl] = useState('')\n    const [prevUrl, setPrevUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const initialUrl = `https://pokeapi.co/api/v2/pokemon`\n    // `https://pokeapi.co/api/v2/pokemon?limit=151`\n\n    useEffect(() => {\n            const fetchData = async () => {\n                let response = await getAllPokemon(initialUrl)\n                setPrevUrl(response.previous)\n                setNextUrl(response.next)\n                await loadingPokemon(response.results)\n                setLoading(false)\n\n            }\n            fetchData()\n        }, [])\n\n        const next = async () => {\n            setLoading(true)\n            let data = await getAllPokemon(nextUrl)\n            await loadingPokemon(data.results)\n            setNextUrl(data.next)\n            setPrevUrl(data.previous)\n            setLoading(false)\n        }\n        const prev = async () => {\n            if (!prevUrl) return\n            setLoading(true)\n            let data = await getAllPokemon(prevUrl)\n            await loadingPokemon(data.results)\n            setNextUrl(data.next)\n            setPrevUrl(data.previous)\n            setLoading(false)\n        }\n\n        const loadingPokemon = async (data) => {\n            let pokemonData = await Promise.all(data.map(async pokemon => {\n                let pokemonRecord = await getPokemon(pokemon.url)\n                return pokemonRecord\n            }))\n            setPokemonData(pokemonData)\n        }\n    // const listPokemon = (e) => {\n        \n    //     e.preventDefault()\n        \n        \n\n    //     fetch(url).then(response => {\n    //         if(response.ok) {\n    //             return response.json()\n    //         } else {\n    //             throw new Error (\"dId YoU sPeLl It WrOnG sOn?\")\n    //         }})\n    //         .then(data => {\n    //             data.results.forEach( pokemon => {\n    //                 getPokemonData(pokemon)\n    //             })\n                \n    //         })\n    //         .catch((error) => {\n    //             console.log(error)\n\n    //         })\n        \n    // }\n    const PokemonListDisplay = ({ pokemon }) => {\n        return (\n            <div className=\"listItem\">\n                <p>{pokemon.name}</p>\n                <p>{pokemon.id}</p>\n                <img src={pokemon.sprites.front_default}/>\n\n            </div>\n        )\n    }\n\n    return(\n        <div>\n           {\n           loading ? <Loading /> : (\n                <>\n                    <div>\n                        <button onClick={prev}>prev</button>\n                        <button onClick={next}>next</button>\n                    </div>\n                    <div className=\"listWrapper\">\n                        {pokemonData.map((pokemon, index) => {\n                            return <PokemonListDisplay key={index} pokemon={pokemon} />\n                        })}\n                    </div>\n                </>\n             )\n           }\n        </div>\n    )\n}\n\nexport default PokemonList","/Users/codenation/Desktop/codeNation/react-router-example/src/services/pokemon.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":14,"column":21,"nodeType":"60","endLine":14,"endColumn":46},{"ruleId":"61","severity":1,"message":"62","line":24,"column":12,"nodeType":"63","endLine":24,"endColumn":14,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":80,"column":17,"nodeType":"60","endLine":80,"endColumn":59},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'anime' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialUrl'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [initialUrl]",{"range":"70","text":"71"},[882,884],"[initialUrl]"]
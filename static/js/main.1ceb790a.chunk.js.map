{"version":3,"sources":["components/PokemonDisplay/PokemonDisplay.js","components/ErrorDisplay/ErrorDisplay.js","components/PokemonSearch/PokemonSearch.js","services/pokemon.js","components/Loading/Loading.js","components/PokemonList/PokemonList.js","components/Pokemon.js","App.js","index.js"],"names":["PokemonDisplay","pokemon","console","log","name","id","type","src","img","ErrorDisplay","PokemonSearch","useState","loading","setLoading","userSearch","setUserSearch","error","setError","setPokemon","className","onSubmit","e","preventDefault","url","fetch","then","response","ok","json","Error","data","sprites","front_default","types","catch","setTimeout","value","onChange","target","getAllPokemon","a","Promise","ressolve","reject","res","getPokemon","resolve","Loading","inputMatch","PokemonList","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","useEffect","previous","next","loadingPokemon","results","fetchData","prev","all","map","pokemonRecord","anime","targets","rotateZ","delay","stagger","PokemonListDisplay","onClick","index","Pokemon","App","count","setCount","to","exact","path","ReactDOM","render","document","getElementById"],"mappings":"yUAqBeA,G,kBAlBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OADAC,QAAQC,IAAIF,GAEZ,8BAEQ,gCACI,2DACI,4BAAIA,EAAQG,OACZ,4BAAIH,EAAQI,KACZ,4BAAIJ,EAAQK,OACZ,qBAAKC,IAAKN,EAAQO,aCJvBC,EANM,WACjB,OACI,0DC8FOC,EA7FO,WAAM,MAGMC,oBAAS,GAHf,mBAGjBC,EAHiB,KAGRC,EAHQ,OAIYF,mBAAS,IAJrB,mBAIjBG,EAJiB,KAILC,EAJK,OAKEJ,oBAAS,GALX,mBAKjBK,EALiB,KAKVC,EALU,OAOMN,mBAAS,CACnCP,KAAM,GACNC,GAAI,GACJG,IAAK,GACLF,KAAM,KAXc,mBAOjBL,EAPiB,KAORiB,EAPQ,KA+DxB,OACI,sBAAKC,UAAU,mBAAf,UAEI,yCACA,uBAAMC,SAtDQ,SAACC,GAEnBA,EAAEC,iBACFT,GAAW,GAGC,IAAIU,EAAG,4CAAwCT,GAE/CU,MACID,GAEHE,MAAK,SAAAC,GAMF,GAJAxB,QAAQC,IAAIuB,GAITA,EAASC,GACR,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAO,kCAKxBJ,MAAK,SAAAK,GACFZ,EAAW,CACPd,KAAM0B,EAAK1B,KACXC,GAAIyB,EAAKzB,GACTG,IAAKsB,EAAKC,QAAQC,cAClB1B,KAAMwB,EAAKG,MAAM,GAAG3B,KAAKF,UAIhC8B,OAAM,SAAClB,GACJd,QAAQC,IAAIa,GACZC,GAAS,MAWzBkB,YAAW,kBAAOtB,GAAW,KAAQ,MAOjC,UACI,uBACIP,KAAK,OACL8B,MAAOtB,EACPuB,SAAU,SAAChB,GACNN,EAAcM,EAAEiB,OAAOF,UAGhC,+CAEHxB,IAAqB,IAAVI,EACZ,gCACI,4BAAIF,IACJ,kDACA,cAAC,EAAD,CAAiBb,QAASA,QAGpB,IAAVe,EACA,4CAEA,cAAC,EAAD,Q,uBC7FDuB,EAAa,uCAAG,WAAOhB,GAAP,SAAAiB,EAAA,+EAChB,IAAIC,SAAQ,SAACC,EAAUC,GAC1BnB,MAAMD,GACLE,MAAK,SAAAmB,GAAG,OAAIA,EAAIhB,UAChBH,MAAK,SAAAK,GACFY,EAASZ,UALM,2CAAH,sDAUbe,EAAU,uCAAG,WAAOtB,GAAP,SAAAiB,EAAA,+EACb,IAAIC,SAAQ,SAACK,EAASH,GACzBnB,MAAMD,GACLE,MAAK,SAAAmB,GAAG,OAAIA,EAAIhB,UAChBH,MAAK,SAAAK,GACFgB,EAAQhB,UALI,2CAAH,sDCDNiB,G,MANC,SAAC,GAAmB,EAAjBC,WACf,OACI,oBAAI7B,UAAU,UAAd,iC,iCCgGO8B,EA7FK,WAAO,IAAD,EACgBtC,mBAAS,IADzB,mBACfuC,EADe,KACFC,EADE,OAEQxC,mBAAS,IAFjB,mBAEfyC,EAFe,KAENC,EAFM,OAGQ1C,mBAAS,IAHjB,mBAGf2C,EAHe,KAGNC,EAHM,OAIQ5C,oBAAS,GAJjB,mBAIfC,EAJe,KAINC,EAJM,KAQtB2C,qBAAU,YACa,uCAAG,4BAAAhB,EAAA,sEACOD,EALjB,qCAIU,cACVb,EADU,OAEd6B,EAAW7B,EAAS+B,UACpBJ,EAAW3B,EAASgC,MAHN,SAIRC,EAAejC,EAASkC,SAJhB,OAKd/C,GAAW,GALG,2CAAH,qDAOfgD,KACD,IAEH,IAAMH,EAAI,uCAAG,4BAAAlB,EAAA,6DACT3B,GAAW,GADF,SAEQ0B,EAAca,GAFtB,cAELtB,EAFK,gBAGH6B,EAAe7B,EAAK8B,SAHjB,OAITP,EAAWvB,EAAK4B,MAChBH,EAAWzB,EAAK2B,UAChB5C,GAAW,GANF,2CAAH,qDAQJiD,EAAI,uCAAG,4BAAAtB,EAAA,yDACJc,EADI,wDAETzC,GAAW,GAFF,SAGQ0B,EAAce,GAHtB,cAGLxB,EAHK,gBAIH6B,EAAe7B,EAAK8B,SAJjB,OAKTP,EAAWvB,EAAK4B,MAChBH,EAAWzB,EAAK2B,UAChB5C,GAAW,GAPF,4CAAH,qDAUJ8C,EAAc,uCAAG,WAAO7B,GAAP,eAAAU,EAAA,sEACKC,QAAQsB,IAAIjC,EAAKkC,IAAL,uCAAS,WAAM/D,GAAN,eAAAuC,EAAA,sEACfK,EAAW5C,EAAQsB,KADJ,cACrC0C,EADqC,yBAElCA,GAFkC,2CAAT,wDADjB,OACff,EADe,OAKnBC,EAAeD,GALI,2CAAH,sDAQ5BM,qBAAU,WAENU,kBAAM,CACFC,QAAS,cACTC,QAAS,IACTC,MAAOH,UAAMI,QAAQ,UAMzB,IAAMC,EAAqB,SAAC,GAAiB,IAAftE,EAAc,EAAdA,QAC1B,OACI,qBAAKkB,UAAU,WAAf,SACI,eAAC,IAAD,CAAOA,UAAU,OAAjB,UAGI,mBAAGA,UAAU,cAAb,SAA4BlB,EAAQG,OACpC,mBAAGe,UAAU,YAAb,SAA0BlB,EAAQI,KAClC,qBAAKc,UAAU,aAAaZ,IAAKN,EAAQ8B,QAAQC,sBAMjE,OACI,8BAEGpB,EAAU,cAAC,EAAD,IACL,sBAAKO,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,eAAC,IAAD,WACI,wBAAQA,UAAU,aAAaqD,QAASV,EAAxC,kBACA,wBAAQ3C,UAAU,aAAaqD,QAASd,EAAxC,uBAGR,qBAAKvC,UAAU,cAAf,SACK+B,EAAYc,KAAI,SAAC/D,EAASwE,GACvB,OAAO,cAACF,EAAD,CAAgCtE,QAASA,GAAhBwE,cC1E7CC,EAZC,WAEhB,OACI,gCACI,8DACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCwCOC,EA5CH,WAAO,IAAD,EACUhE,mBAAS,GADnB,mBACTiE,EADS,KACFC,EADE,KAWhB,OACE,qBAAK1D,UAAU,MAAf,SACE,eAAC,IAAD,WACE,sBAAKA,UAAU,SAAf,UACE,8BAAK,cAAC,IAAD,CAAM2D,GAAG,IAAT,oBACL,8BAAK,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACL,8BAAK,cAAC,IAAD,CAAMA,GAAG,WAAT,uBACL,8BAAK,cAAC,IAAD,CAAMA,GAAG,WAAT,0BAGP,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,yCAEF,eAAC,IAAD,CAAOA,KAAK,SAAZ,UACE,6BAAKJ,IACL,wBAAQJ,QAxBI,WACpB,OACEK,EAASD,EAAQ,IAsBX,uBAEF,cAAC,IAAD,CAAOI,KAAK,WAAZ,SACE,2CAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,eCnCZC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1ceb790a.chunk.js","sourcesContent":["import React from 'react'\nimport './PokemonDisplay.css'\n\nconst PokemonDisplay = ({ pokemon }) => {\n    console.log(pokemon)\n    return (\n    <div>\n\n            <div>\n                <h1>pokemon display component</h1>\n                    <p>{pokemon.name}</p>\n                    <p>{pokemon.id}</p>\n                    <p>{pokemon.type}</p>\n                    <img src={pokemon.img} />\n            </div> \n        \n    </div>\n    )\n\n}\n\nexport default PokemonDisplay","import React from 'react'\n\n\nconst ErrorDisplay = () => {\n    return (\n        <h1>error display component</h1>\n    )\n}\n\nexport default ErrorDisplay","import React, { useState } from 'react'\nimport './PokemonSearch.css'\n// import Loading from '../Loading/Loading'\nimport PokemonDisplay from '../PokemonDisplay/PokemonDisplay'\nimport ErrorDisplay from '../ErrorDisplay/ErrorDisplay'\n\nconst PokemonSearch = () => {\n\n    // let loaded = false\n    const [loading, setLoading] = useState(true)\n    const [userSearch, setUserSearch] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    const [pokemon, setPokemon] = useState({\n        name: \"\",\n        id: \"\",\n        img: \"\",\n        type: \"\"\n    })\n    const searchPokemon = (e) => {\n\n        e.preventDefault()\n        setLoading(false)\n\n        //working call (tempermental)\n                    let url = `https://pokeapi.co/api/v2/pokemon/${userSearch}`\n                    \n                    fetch(  \n                        url\n                        )\n                    .then(response => {\n\n                        console.log(response)\n                        //launch test error component\n                        // response = false\n\n                        if(response.ok) {\n                            return response.json()\n                        } else {\n                            throw new Error (\"dId YoU sPeLl It WrOnG sOn?\")\n                        }\n            \n                    })\n\n                    .then(data => {\n                        setPokemon({\n                            name: data.name,\n                            id: data.id,\n                            img: data.sprites.front_default,\n                            type: data.types[0].type.name\n                        })\n                        \n                    })\n                    .catch((error) => {\n                        console.log(error)\n                        setError(true)\n                    })\n\n        //NO API CALLS, HARD CODED\n        // setPokemon({\n        //     name: \"pikachu\",\n        //     id: \"25\",\n        //     img:\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png\",\n        //     type: \"electric\"\n        // })\n        \n        setTimeout(() => (setLoading(true)), 1000)\n    }\n\n    return (\n        <div className=\"searchBarWrapper\">\n       \n            <h1> search</h1>\n            <form onSubmit={searchPokemon}> \n                <input \n                    type=\"text\"\n                    value={userSearch}\n                    onChange={(e) => \n                        {setUserSearch(e.target.value)}\n                    }\n                />\n                <button>submit</button>\n            </form>\n           { loading && error === false ? \n            <div>\n                <p>{userSearch}</p>\n                <p>search api result</p>\n                <PokemonDisplay  pokemon={pokemon}/>\n            </div> \n            : \n            error !== true ?\n            <h1>loading...</h1> \n            :\n            <ErrorDisplay />\n            }\n        </div>\n    )\n}\n\nexport default PokemonSearch","export let getAllPokemon = async (url) => {\n    return new Promise((ressolve, reject) => {\n        fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            ressolve(data)\n        })\n    })\n}\n\nexport let getPokemon = async (url) => {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            resolve(data)\n        })\n    })\n}","import React from 'react'\nimport './Loading.css'\n\nconst Loading = ({ inputMatch }) => {\n    return (\n        <h1 className=\"loading\">loading component</h1>\n    )\n}\n\nexport default Loading","import React, { useState, useEffect } from 'react'\nimport { getAllPokemon, getPokemon } from '../../services/pokemon'\nimport Loading from '../Loading/Loading'\nimport './PokemonList.css'\nimport anime from 'animejs'\n\nimport Anime from 'react-anime'\n\nconst PokemonList = () => {\n    const [pokemonData, setPokemonData] = useState([])\n    const [nextUrl, setNextUrl] = useState('')\n    const [prevUrl, setPrevUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const initialUrl = `https://pokeapi.co/api/v2/pokemon`\n    // `https://pokeapi.co/api/v2/pokemon?limit=151`\n\n    useEffect(() => {\n            const fetchData = async () => {\n                let response = await getAllPokemon(initialUrl)\n                setPrevUrl(response.previous)\n                setNextUrl(response.next)\n                await loadingPokemon(response.results)\n                setLoading(false)\n            }\n            fetchData()    \n        }, [])\n\n        const next = async () => {\n            setLoading(true)\n            let data = await getAllPokemon(nextUrl)\n            await loadingPokemon(data.results)\n            setNextUrl(data.next)\n            setPrevUrl(data.previous)\n            setLoading(false)\n        }\n        const prev = async () => {\n            if (!prevUrl) return\n            setLoading(true)\n            let data = await getAllPokemon(prevUrl)\n            await loadingPokemon(data.results)\n            setNextUrl(data.next)\n            setPrevUrl(data.previous)\n            setLoading(false)\n        }\n\n        const loadingPokemon = async (data) => {\n            let pokemonData = await Promise.all(data.map(async pokemon => {\n                let pokemonRecord = await getPokemon(pokemon.url)\n                return pokemonRecord\n            }))\n            setPokemonData(pokemonData)\n\n        }\nuseEffect(() => {\n\n    anime({\n        targets: '.pokemonImg',\n        rotateZ: 360,\n        delay: anime.stagger(100)\n\n    })\n\n})\n\n    const PokemonListDisplay = ({ pokemon }) => {\n        return (\n            <div className=\"listItem\">\n                <Anime className=\"list\"\n                //  {...anime}\n                 >\n                    <p className=\"pokemonName\">{pokemon.name}</p>\n                    <p className=\"pokemonId\">{pokemon.id}</p>\n                    <img className=\"pokemonImg\" src={pokemon.sprites.front_default}/>\n                </Anime>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n           {\n           loading ? <Loading /> : (\n                <div className=\"listComponent\">\n                    <div className=\"buttonWrapper\">\n                        <Anime>\n                            <button className=\"buttonPrev\" onClick={prev}>prev</button>\n                            <button className=\"buttonNext\" onClick={next}>next</button>\n                        </Anime>\n                    </div>\n                    <div className=\"listWrapper\">\n                        {pokemonData.map((pokemon, index) => {\n                            return <PokemonListDisplay key={index} pokemon={pokemon} />\n                        })}\n                    </div>\n                </div>\n             )\n           }\n        </div>\n    )\n}\n\nexport default PokemonList","import React, { useState } from 'react'\nimport PokemonSearch from './PokemonSearch/PokemonSearch'\n// import Loading from '../components/Loading/Loading'\nimport PokemonList from './PokemonList/PokemonList'\n\nconst Pokemon = () => {\n\nreturn (\n    <div>\n        <h1> pokemon main component file</h1>\n        <PokemonSearch />\n        {/* <Loading /> */}\n        <PokemonList />\n    </div>\n)\n}\n\nexport default Pokemon","// npm install!\n\nimport React, { useState } from 'react'\nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nimport Pokemon from './components/Pokemon'\n//information in the provided can be avaibale in the context\nconst App = () => {\n  const [count, setCount] = useState(0)\n\n  const increaseCount = () => {\n    return (\n      setCount(count + 1)\n\n    )\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav className=\"navBar\">\n          <div><Link to=\"/\">home</Link></div>\n          <div><Link to=\"/about\">about</Link></div>\n          <div><Link to=\"/contact\">contact</Link></div>\n          <div><Link to=\"/pokemon\">pokemon</Link></div>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <h1>hello</h1>\n          </Route>\n          <Route path=\"/about\">\n            <h1>{count}</h1>\n            <button onClick={increaseCount}>plus 1</button>\n          </Route>\n          <Route path=\"/contact\">\n            <h1>contact</h1>\n          </Route>\n          <Route path=\"/pokemon\">\n            <Pokemon/>\n          </Route>\n        </Switch>\n        {/* <div>\n          <h1>hello</h1>\n        </div> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}